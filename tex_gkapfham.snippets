snippet smartstart "Smartquotes starting" i
\`\`
endsnippet

snippet smartend "Smartquotes ending" i
''
endsnippet

global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z']]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False
endglobal

priority 100
snippet ... "ldots" i
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" i
\implies
endsnippet

snippet =< "implied by" i
\impliedby
endsnippet

context "math()"
snippet iff "iff" i
\iff
endsnippet

snippet mk "Math" w
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" w
\[
${1:${VISUAL}}
.\] $0
endsnippet

snippet ali "Align" b
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

context "math()"
snippet // "Fraction" i
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet == "equals" i
&= $1 \\\\
endsnippet

snippet != "equals" i
\neq
endsnippet

context "math()"
snippet ceil "ceil" i
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" i
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet pmat "pmat" i
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet bmat "bmat" i
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet () "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet lr| "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

snippet lr{ "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet lra "leftangle rightangle" i
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet conj "conjugate" i
\overline{$1}$0
endsnippet

snippet sum "sum" w
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partil ${1:V}}{\partil ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" i
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet sr "^2" i
^2
endsnippet

context "math()"
snippet cb "^3" i
^3
endsnippet

context "math()"
snippet td "to the ... power" i
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" i
^{($1)}$0
endsnippet

snippet __ "subscript" i
_{$1}$0
endsnippet

snippet ooo "\infty" i
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet <= "leq" i
\le 
endsnippet

snippet >= "geq" i
\ge 
endsnippet

context "math()"
snippet EE "geq" i
\exists 
endsnippet

context "math()"
snippet AA "forall" i
\forall 
endsnippet

context "math()"
snippet xnn "xn" i
x_{n}
endsnippet

context "math()"
snippet ynn "yn" i
y_{n}
endsnippet

context "math()"
snippet xii "xi" i
x_{i}
endsnippet

context "math()"
snippet yii "yi" i
y_{i}
endsnippet

context "math()"
snippet xjj "xj" i
x_{j}
endsnippet

context "math()"
snippet yjj "yj" i
y_{j}
endsnippet

context "math()"
snippet xp1 "x" i
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" i
x_{m}
endsnippet

snippet R0+ "R0+" i
\\R_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[$1]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			xmin= ${2:-10}, xmax= ${3:10},
			ymin= ${4:-10}, ymax = ${5:10},
			axis lines = middle,
		]
			\addplot[domain=$2:$3, samples=${6:100}]{$7};
		\end{axis}
	\end{tikzpicture}
	\caption{$8}
	\label{${9:$8}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" i
\mathcal{$1}$0
endsnippet

snippet lll "l" i
\ell
endsnippet

context "math()"
snippet nabl "nabla" i
\nabla 
endsnippet

context "math()"
snippet xx "cross" i
\times 
endsnippet

priority 100
snippet ** "cdot" i
\cdot 
endsnippet

context "math()"
snippet norm "norm" i
\|$1\|$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rw
\\`!p snip.rv = match.group(1)`
endsnippet

priority 300
context "math()"
snippet dint "integral" w
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "ln" rw
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet -> "to" i
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" i
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" i
\mapsto 
endsnippet

context "math()"
snippet invs "inverse" i
^{-1}
endsnippet

context "math()"
snippet compl "complement" i
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" i
\setminus
endsnippet

snippet >> ">>" i
\gg
endsnippet

snippet << "<<" i
\ll
endsnippet

snippet ~~ "~" i
\sim 
endsnippet

context "math()"
snippet set "set" w
\\{$1\\} $0
endsnippet

snippet || "mid" i
 \mid 
endsnippet

context "math()"
snippet cc "subset" i
\subset 
endsnippet

snippet notin "not in " i
\not\in 
endsnippet

context "math()"
snippet inn "in " i
\in 
endsnippet

snippet NN "n" i
\N
endsnippet

snippet Nn "cap" i
\cap 
endsnippet

snippet UU "cup" i
\cup 
endsnippet

snippet uuu "bigcup" i
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet nnn "bigcap" i
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

snippet OO "emptyset" i
\O
endsnippet

snippet RR "real" i
\R
endsnippet

snippet QQ "Q" i
\Q
endsnippet

snippet ZZ "Z" i
\Z
endsnippet

snippet <! "normal" i
\tringleleft 
endsnippet

snippet <> "hokje" i
\dimond 
endsnippet

context "math()"
snippet '(?<!i)sts' "text subscript" ir
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" i
\text{$1}$0
endsnippet

context "math()"
snippet case "cases" w
\begin{cases}
	$1
\end{cases}
endsnippet

snippet SI "SI" i
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" i
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $1($4) = $0
.\end{align*}
endsnippet

snippet cvec "column vector" i
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" ri
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" ri
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" ri
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" ri
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet letw "let omega" i
Let $\Omega \subset \C$ be open.
endsnippet

snippet HH "H" i
\mathbb{H}
endsnippet

snippet DD "D" i
\mathbb{D}
endsnippet

# vim:ft=snippets
